#include "http.hpp"
#include "openweathercfg.h"
#include <string>
#include <iostream>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>

int main(int argc, char **argv)
{
  HTTPConnection con ;
  
  std::string host = "api.openweathermap.org" ;
  std::string locationid = "3333178" ; // Nottingham
  std::string key = OPENWEATHERKEY ;
  std::string urn = "/data/2.5/forecast?id=" + locationid + "&APPID=" + key + "&mode=json&units=metric";
 
  //std::string host = "192.168.1.111" ;
  //std::string urn = "/" ;

  if (argc > 1){
    urn = argv[1] ;
  }
    
  con.set_urn(urn) ;
  if (!con.send_get(host, 80)){
    std::cout << "Cannot process the GET data\n" ;
    return 1 ;
  }

  std::string str = con.get_data() ;
  
  std::cout << "HTTP protocol major: " << con.get_protocol_major() << ", minor: " << con.get_protocol_minor() << std::endl;
  std::cout << "Return code: " << con.get_http_code() << std::endl;
  std::cout << "Additional return code: " << con.get_response_str() << std::endl;
  std::cout << "Media type: " << con.get_media_type() << std::endl;
  std::cout << "Character set: " << con.get_charset() << std::endl;
  
  //std::cout << "<<DATA>>\n" << str << "<<DATA>>\n" ;

  int fd = open("weathercache", O_WRONLY | O_CREAT | O_TRUNC) ;
  if (fd < 0){
    std::cerr << "Cannot open weathercache for writing\n" ;
    return 1 ;
  }
  int ret = write(fd, str.c_str(), str.length());
  if (ret != str.length()){
    std::cerr << "Cannot write the result to the cache file\n" ;
    return 1 ;
  }

  close(fd) ;

  return 0 ;  
}
